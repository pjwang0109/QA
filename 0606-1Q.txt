以下可以改寫成jquery嗎

// 狀態變數
        let yearList = []; // 儲存年份
        const maxYears = 3;

        //新增年份
        function addYearDataUnit(obj) {
            const input = $('#year-input');
            let year = parseInt(input.val());

            if (isNaN(year)) {
                alert('請輸入有效的年份');
                return;
            }

            if (yearList.includes(year)) {
                alert('該年份已存在');
                return;
            }

            if (yearList.length >= maxYears) {
                alert('最多只能新增 3 個年份');
                return;
            }

            yearList.push(year);
            yearList.sort(); // 排序

            updateTableHeader(obj);
            updateProductRows(obj);

            input.val(year + 1); // 自動 +1
        }

        function updateTableHeader(obj) {
            const $header = $('#table-header');
            $header.find('th.year-col').remove(); // 清除舊欄位

            yearList.forEach(year => {
                const th = $(`<th class="year-col year-col-${year}">
                    <div class="form-inline year-${year}">
                        <input type="text" style="width:100px" class="form-control product-year yy-1 form-digit-5 text-center"
                          name="product-year" readonly/>
                        <span class="input-group-addon">年</span>
                        <button class="btn btn-danger" onclick="delete401Unit(this)">
                          <i class="fa fa-times"></i>
                        </button>
                    </div>
                </th>`);
                th.find('.product-year').val(year);
                console.log($(obj));
                insertSortedColumn($header, th, year);
            });
        }

        function updateProductRows(obj) {
            $('#product-body .product-row').each(function () {
                const $row = $(this);
                $row.find('td.year-col').remove(); // 清除原有金額欄

                yearList.forEach(year => {
                const td = $(`
                    <td class="year-col year-col-${year}">
                      <div class="form-inline ${year}">
                        <input type="text" maxlength="3" style="width: 114px" class="form-control rate1"/>
                        <span class="input-group-text">%</span>
                      </div>
                    </td>
                `);
                insertSortedColumn($row, td, year);
                });
            });
        }

        function insertSortedColumn($parent, $element, year) {
            let inserted = false;
            $parent.children('th.year-col, td.year-col').each(function () {
                const currentYear = parseInt($(this).text());
                if (year < currentYear) {
                $(this).before($element);
                inserted = true;
                return false;
                }
            });
            if (!inserted) {
                $parent.append($element);
            }
        }

        //新增產品
        function addProductTableData() {
            const $row = $('<tr class="product-row"></tr>');

            $row.append(`
                <td class="d-flex">
                  <button class="btn btn-danger mr-2" onclick="delete401Unit(this)">
                    <i class="fa fa-times"></i>
                  </button>
                  <textarea class="form-control pname" rows="1" placeholder="產品名稱"></textarea>
                </td>
                <td style="vertical-align:middle">佔營收比</td>
            `);

            yearList.forEach(year => {
                const $td = $(`
                <td class="year-col year-col-${year}">
                    <div class="form-inline ${year}">
                        <input type="text" maxlength="3" style="width: 114px" class="form-control rate1"/>
                        <span class="input-group-text">%</span>
                    </div>
                </td>
                `);
                insertSortedColumn($row, $td, year);
            });

            $('#product-body').append($row);
        }
