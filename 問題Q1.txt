.identities 會有下列這個陣列
0:{typeVal: '1', name: 'Ｏｂｊｅｃｔ　Ｍａｐ　Ｌｉｍｉｔｅｄ', id: 'VGBO1096', typeText: '保證人'}
1:{typeVal: '6', name: 'a', id: '123', typeText: '連帶保證人'}
2:{typeVal: '6', name: 'b', id: 'BASD1234', typeText: '連帶保證人'}
3:{typeVal: '6', name: 'c', id: '04508900', typeText: '連帶保證人'}
4:{typeVal: '6', name: 'd', id: '0000', typeText: '連帶保證人'}
5:{typeVal: '6', name: 'e', id: '22226666', typeText: '連帶保證人'}
6:{typeVal: '6', name: 'f', id: 'QWER1478', typeText: '連帶保證人'}

.responsible 會有下列這個陣列 (要當 .identities 的 id長度為8時，才會產出陣列)
0:{resName: 'Ｏｂｊｅｃｔ　Ｍａｐ　Ｌｉｍｉｔｅｄ', resPerson: ''}
1:{resName: 'b', resPerson: 'bbb'}
2:{resName: 'c', resPerson: 'cccc'}
3:{resName: 'e', resPerson: 'eee'}
4:{resName: 'f', resPerson: ''}

用 .identities name 去對照 .responsible resName ， 若 name 有，而 resName 沒有的話，以 .identities name 為基礎，以上面例子來說，我最後想得到的鎮列為
0:{typeVal: '1', name: 'Ｏｂｊｅｃｔ　Ｍａｐ　Ｌｉｍｉｔｅｄ', id: 'VGBO1096', typeText: '保證人', resName: 'Ｏｂｊｅｃｔ　Ｍａｐ　Ｌｉｍｉｔｅｄ', resPerson: ''}
1:{typeVal: '6', name: 'a', id: '123', typeText: '連帶保證人', resName: '', resPerson: ''}
2:{typeVal: '6', name: 'b', id: 'BASD1234', typeText: '連帶保證人', resName: 'b', resPerson: 'bbb'}
3:{typeVal: '6', name: 'c', id: '04508900', typeText: '連帶保證人', resName: 'c', resPerson: 'cccc'}
4:{typeVal: '6', name: 'd', id: '0000', typeText: '連帶保證人', resName: '', resPerson: ''}
5:{typeVal: '6', name: 'e', id: '22226666', typeText: '連帶保證人', resName: 'e', resPerson: 'eee'}
6:{typeVal: '6', name: 'f', id: 'QWER1478', typeText: '連帶保證人', resName: 'f', resPerson: ''}

這樣以下程式該如何修改?

function responDel(){ 
    let idtArr = [];
    $(".identities").map(function (index) {
        let $item = $(this)
        let id = $item.find(".id").val()
        let type = $item.find(".type").val()
        let name = $item.find(".name").val()
        let typeText = $item.find(".type option:selected").text()
        
        $(".responsible").map(function (index) {
            let $item = $(this)
            let resName = $item.find(".principal").val()
            let resPerson = $item.find(".responsibleName").val()
            
            if (type && id.length === 8 && name === resName) { // 身份別有填寫
                idtArr.push({ "id": id, "type": type, "name": name, "typeText": typeText, "resName": resName, "resPerson": resPerson })
            }
        })
    })

    idtArr.sort((a, b) => { return a.type - b.type });

    $(".responsible").remove();
    let count = {}
    Object.entries(idtArr).forEach(([index, item]) => {
        let num = Number(index) + 1
        let id = item.id
        let type = item.type
        let name = item.name
        let typeText = item.typeText
        let resPerson = item.resPerson // 負責人填寫的名稱
        count[typeText] = (count[typeText] || 0) + 1

        if (type) {
            if (id.length === 8) {
                if (type === '0') {
                    typeText = "立約人(即借款人)"
                    count[typeText] = ""
                }
                let $responsibleDiv = `<div id="responsible${num}" class="form-group form-inline responsible">
                    <span class="ml-5 mr-1">${typeText}${count[typeText]}：</span>
                    <input type="text" class="form-control principal" style="margin-left: 47px;" value="${name}" disabled>
                    <input type="hidden" class="code" name="code" value="${id}">
                    <div class="principalDiv hide">
                        <span class="ml-5">負責人：</span>
                        <input type="text" class="form-control responsibleName" placeholder="" value="${resPerson}">
                        <span>(自行輸入)</span>
                    </div>
                        <button type="button" class="btn btn-info principalbtn ml-5" onclick="principalBtn(this)">負責人</button>
                    </div>`
                $(".responsibleDiv").append($responsibleDiv);
                if(resPerson){
                    $('.N6').find(`#responsible${num}`).find('.principalDiv').removeClass("hide");
                }else{
                    $('.N6').find(`#responsible${num}`).find('.principalDiv').addClass("hide");
                }
            }
        }
    })            
}
